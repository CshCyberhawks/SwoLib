plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.6.10"
    id "maven-publish"
}

group = "com.github.CshCyberhawks"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11


// Set to true to use debug for JNI.
// wpi.java.debugJni = false

// Set this to true to enable desktop support.
// def includeDesktopSupport = true

// Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.
// Also defines JUnit 4.
dependencies {
    // implementation wpi.java.deps.wpilib()
    // implementation wpi.java.vendor.java()

    // roborioDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.roborio)
    // roborioDebug wpi.java.vendor.jniDebug(wpi.platforms.roborio)
    //
    // roborioRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.roborio)
    // roborioRelease wpi.java.vendor.jniRelease(wpi.platforms.roborio)

    // nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)
    // nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)
    // simulationDebug wpi.sim.enableDebug()
    //
    // nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)
    // nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop)
    // simulationRelease wpi.sim.enableRelease()

    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

}

//make it a jitpack dependency or whatever
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

// // Simulation configuration (e.g. environment variables).
// wpi.sim.addGui().defaultEnabled = true
// wpi.sim.addDriverstation()

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    // manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_MAIN_CLASS)
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// Configure jar and deploy tasks
// deployArtifact.jarTask = jar
// wpi.java.configureExecutableTasks(jar)
// wpi.java.configureTestTasks(test)

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}
