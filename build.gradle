buildscript {
    ext.WPI_VER = "2022.4.1"
}

plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.6.10"
    id "edu.wpi.first.GradleRIO" version "2022.4.1"
    id "maven-publish"
}

group = "com.github.cshcyberhawks"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

// Set to true to use debug for JNI.
// wpi.java.debugJni = false

// Set this to true to enable desktop support.
// def includeDesktopSupport = true

// Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.
// Also defines JUnit 4.
dependencies {
    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java()

    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)
    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)
    simulationDebug wpi.sim.enableDebug()

    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)
    nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop)
    simulationRelease wpi.sim.enableRelease()

    implementation "edu.wpi.first.ntcore:ntcore-java:${WPI_VER}"
    implementation "edu.wpi.first.wpiutil:wpiutil-java:${WPI_VER}"
    runtimeOnly "edu.wpi.first.ntcore:ntcore-jni:${WPI_VER}:windowsx86"
    runtimeOnly "edu.wpi.first.ntcore:ntcore-jni:${WPI_VER}:windowsx86-64"
    runtimeOnly "edu.wpi.first.ntcore:ntcore-jni:${WPI_VER}:linuxx86-64"
    runtimeOnly "edu.wpi.first.ntcore:ntcore-jni:${WPI_VER}:osxx86-64"

    testImplementation 'junit:junit:4.13.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

}

// // Simulation configuration (e.g. environment variables).
// wpi.sim.addGui().defaultEnabled = true
// wpi.sim.addDriverstation()

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
//    // manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_MAIN_CLASS)
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from "src"
}

java {
    withSourcesJar()
}

// Configure jar and deploy tasks
// deployArtifact.jarTask = jar
// wpi.java.configureExecutableTasks(jar)
// wpi.java.configureTestTasks(test)

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

//make it a jitpack dependency or whatever
afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId = "com.cshcyberhawks.swolib"
                artifactId = "library"
                version = "1.0"

                from components.java
            }
        }
    }
}

wrapper {
    gradleVersion = "7.4"
    distributionType = Wrapper.DistributionType.ALL
}
