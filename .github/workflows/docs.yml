# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build Documentation

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: dokkaHtml
    - uses: actions/checkout@v2
    - name: copy
      env:
          SRC_FOLDER_PATH: 'build/dokka/html'
          TARGET_BRANCH: 'docs'
      run: |
          git config --global user.name 'cshrobotics2875'
          git config --global user.email 'cshrobotics@protonmail.com'
          sh gradlew dokkaHtml
          mkdir ../temp
          cp -r .git/ ../temp
          cd ../temp
          git fetch
          git checkout $TARGET_BRANCH       # checkout to your branch
          cp -r ../SwoLib/$SRC_FOLDER_PATH ../new
          cp -r .git/ ../new
          cd ../new
          git fetch
          git add -A
          git diff-index --quiet HEAD ||  git commit -am "docs"  # commit to the repository (ignore if no modification)
          git push origin $TARGET_BRANCH # push to remote branch
